#pragma version 8
txn NumAppArgs
int 0
==
bnz main_l34
txna ApplicationArgs 0
method "box_write(byte[],(uint64,uint64))void"
==
bnz main_l33
txna ApplicationArgs 0
method "box_read(byte[])(uint64,uint64)"
==
bnz main_l32
txna ApplicationArgs 0
method "add(uint64,uint64)uint64"
==
bnz main_l31
txna ApplicationArgs 0
method "sub(uint64,uint64)uint64"
==
bnz main_l30
txna ApplicationArgs 0
method "mul(uint64,uint64)uint64"
==
bnz main_l29
txna ApplicationArgs 0
method "div(uint64,uint64)uint64"
==
bnz main_l28
txna ApplicationArgs 0
method "mod(uint64,uint64)uint64"
==
bnz main_l27
txna ApplicationArgs 0
method "qrem(uint64,uint64)(uint64,uint64)"
==
bnz main_l26
txna ApplicationArgs 0
method "reverse(string)string"
==
bnz main_l25
txna ApplicationArgs 0
method "concat_strings(string[])string"
==
bnz main_l24
txna ApplicationArgs 0
method "make_array(uint64,uint64,uint64)uint64[]"
==
bnz main_l23
txna ApplicationArgs 0
method "sum_array(uint64[])uint64"
==
bnz main_l22
txna ApplicationArgs 0
method "manyargs(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)uint64"
==
bnz main_l21
txna ApplicationArgs 0
method "min_bal(account)uint64"
==
bnz main_l20
txna ApplicationArgs 0
method "no_return(uint64)void"
==
bnz main_l19
txna ApplicationArgs 0
method "txntest(uint64,pay,uint64)uint64"
==
bnz main_l18
err
main_l18:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 93
txna ApplicationArgs 2
btoi
store 95
txn GroupIndex
int 1
-
store 94
load 94
gtxns TypeEnum
int pay
==
assert
load 93
load 94
load 95
callsub txntest_15
store 96
byte 0x151f7c75
load 96
itob
concat
log
int 1
return
main_l19:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
callsub noreturn_14
int 1
return
main_l20:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
int 0
getbyte
callsub minbal_13
store 91
byte 0x151f7c75
load 91
itob
concat
log
int 1
return
main_l21:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 50
txna ApplicationArgs 2
btoi
store 51
txna ApplicationArgs 3
btoi
store 52
txna ApplicationArgs 4
btoi
store 53
txna ApplicationArgs 5
btoi
store 54
txna ApplicationArgs 6
btoi
store 55
txna ApplicationArgs 7
btoi
store 56
txna ApplicationArgs 8
btoi
store 57
txna ApplicationArgs 9
btoi
store 58
txna ApplicationArgs 10
btoi
store 59
txna ApplicationArgs 11
btoi
store 60
txna ApplicationArgs 12
btoi
store 61
txna ApplicationArgs 13
btoi
store 62
txna ApplicationArgs 14
btoi
store 63
txna ApplicationArgs 15
store 70
load 70
int 0
extract_uint64
store 64
load 70
int 8
extract_uint64
store 65
load 70
int 16
extract_uint64
store 66
load 70
int 24
extract_uint64
store 67
load 70
int 32
extract_uint64
store 68
load 70
int 40
extract_uint64
store 69
load 50
load 51
load 52
load 53
load 54
load 55
load 56
load 57
load 58
load 59
load 60
load 61
load 62
load 63
load 64
load 65
load 66
load 67
load 68
load 69
callsub manyargs_12
store 71
byte 0x151f7c75
load 71
itob
concat
log
int 1
return
main_l22:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
callsub sumarray_11
store 46
byte 0x151f7c75
load 46
itob
concat
log
int 1
return
main_l23:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 39
txna ApplicationArgs 2
btoi
store 40
txna ApplicationArgs 3
btoi
store 41
load 39
load 40
load 41
callsub makearray_10
store 42
byte 0x151f7c75
load 42
concat
log
int 1
return
main_l24:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
callsub concatstrings_9
store 33
byte 0x151f7c75
load 33
concat
log
int 1
return
main_l25:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
callsub reverse_8
store 27
byte 0x151f7c75
load 27
concat
log
int 1
return
main_l26:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 20
txna ApplicationArgs 2
btoi
store 21
load 20
load 21
callsub qrem_7
store 22
byte 0x151f7c75
load 22
concat
log
int 1
return
main_l27:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 17
txna ApplicationArgs 2
btoi
store 18
load 17
load 18
callsub mod_6
store 19
byte 0x151f7c75
load 19
itob
concat
log
int 1
return
main_l28:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 14
txna ApplicationArgs 2
btoi
store 15
load 14
load 15
callsub div_5
store 16
byte 0x151f7c75
load 16
itob
concat
log
int 1
return
main_l29:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 11
txna ApplicationArgs 2
btoi
store 12
load 11
load 12
callsub mul_4
store 13
byte 0x151f7c75
load 13
itob
concat
log
int 1
return
main_l30:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 8
txna ApplicationArgs 2
btoi
store 9
load 8
load 9
callsub sub_3
store 10
byte 0x151f7c75
load 10
itob
concat
log
int 1
return
main_l31:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 5
txna ApplicationArgs 2
btoi
store 6
load 5
load 6
callsub add_2
store 7
byte 0x151f7c75
load 7
itob
concat
log
int 1
return
main_l32:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
callsub boxread_1
store 2
byte 0x151f7c75
load 2
concat
log
int 1
return
main_l33:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
store 1
load 0
load 1
callsub boxwrite_0
int 1
return
main_l34:
txn OnCompletion
int NoOp
==
bnz main_l40
txn OnCompletion
int UpdateApplication
==
bnz main_l39
txn OnCompletion
int DeleteApplication
==
bnz main_l38
err
main_l38:
txn Sender
global CreatorAddress
==
return
main_l39:
txn Sender
global CreatorAddress
==
return
main_l40:
txn ApplicationID
int 0
==
assert
int 1
return

// box_write
boxwrite_0:
store 100
extract 2 0
load 100
box_put
retsub

// box_read
boxread_1:
extract 2 0
box_get
store 4
store 3
load 4
assert
load 3
retsub

// add
add_2:
+
retsub

// sub
sub_3:
-
retsub

// mul
mul_4:
*
retsub

// div
div_5:
/
retsub

// mod
mod_6:
%
retsub

// qrem
qrem_7:
store 24
store 23
load 23
load 24
/
store 25
load 23
load 24
%
store 26
load 25
itob
load 26
itob
concat
retsub

// reverse
reverse_8:
store 28
byte ""
store 31
int 0
store 30
reverse_8_l1:
load 30
load 28
int 0
extract_uint16
<
bz reverse_8_l3
load 28
int 1
load 30
*
int 2
+
getbyte
store 32
byte 0x00
int 0
load 32
setbyte
load 31
concat
store 31
load 30
int 1
+
store 30
b reverse_8_l1
reverse_8_l3:
load 31
store 29
load 29
len
itob
extract 6 0
load 29
concat
store 29
load 29
retsub

// concat_strings
concatstrings_9:
store 34
byte ""
store 37
int 0
store 36
concatstrings_9_l1:
load 36
load 34
int 0
extract_uint16
<
bz concatstrings_9_l6
load 34
load 34
int 2
load 36
*
int 2
+
extract_uint16
int 2
+
load 36
int 1
+
load 34
int 0
extract_uint16
==
bnz concatstrings_9_l5
load 34
int 2
load 36
*
int 2
+
int 2
+
extract_uint16
int 2
+
concatstrings_9_l4:
substring3
store 38
load 37
load 38
extract 2 0
concat
store 37
load 36
int 1
+
store 36
b concatstrings_9_l1
concatstrings_9_l5:
load 34
len
b concatstrings_9_l4
concatstrings_9_l6:
load 37
store 35
load 35
len
itob
extract 6 0
load 35
concat
store 35
load 35
retsub

// make_array
makearray_10:
store 45
store 44
store 43
int 3
itob
extract 6 0
load 43
itob
load 44
itob
concat
load 45
itob
concat
concat
retsub

// sum_array
sumarray_11:
store 47
int 0
store 49
int 0
store 48
sumarray_11_l1:
load 48
load 47
int 0
extract_uint16
<
bz sumarray_11_l3
load 47
int 8
load 48
*
int 2
+
extract_uint64
load 49
+
store 49
load 48
int 1
+
store 48
b sumarray_11_l1
sumarray_11_l3:
load 49
retsub

// manyargs
manyargs_12:
store 90
store 89
store 88
store 87
store 86
store 85
store 84
store 83
store 82
store 81
store 80
store 79
store 78
store 77
store 76
store 75
store 74
store 73
store 72
retsub

// min_bal
minbal_13:
acct_params_get AcctMinBalance
store 92
retsub

// no_return
noreturn_14:
store 101
int 1
assert
retsub

// txntest
txntest_15:
store 99
store 98
store 97
load 98
gtxns TypeEnum
int pay
==
assert
load 98
gtxns Amount
load 97
==
assert
load 98
gtxns Fee
load 99
==
assert
load 98
gtxns Amount
retsub